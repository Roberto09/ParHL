let a[5]:int;
let matrix[10][10]: int;
let cube[3][3][3] : int := read_file(int[3][3][3], "input.txt") 
for(let i:int := 0; i < 5; i := i + 1) {
  a[i] := 1
}
cube[1][1][1] := 0
matrix[1][4]:=0
matrix[ cube[ a[2] ] [ a[1] ] [ a[0] ]  ][ matrix[1][2+2] ]  := 2
print("cube")
for(let i:int := 0; i<3; i:= i+1) {
  for(let j:int := 0; j<3; j:= j+1) {
    for(let k:int :=0; k<3; k:= k+1) {
      print(cube[i][j][k])
    }
  }
}
print("endcube")
print("matrix", matrix[2][0])
let factorial (n : int) : int {
    if(n <= 1) {
        let a:int:=2
        return 1
    }
    return n * factorial(n-1)
}


let main(): int {
    let fibo (n : int) : int {
        print("fac ", factorial(n))
        if(n <= 1) {
            return 0
        }
        if(n = 2) {
            return 1
        }
        return fibo(n-1) + fibo(n-2)
    }
    print("fibo ", fibo(3))
    return 0
}

main()



print("doing cuda stuff")

let c_a[5] : gpu_int;
c_a[3] := 10;
for(let i : int := 0; i < 5; i := i+1){
    print(c_a[i])
}

let c_b[5] : gpu_bool;
for(let i : int := 0; i < 5; i := i+1){
    print(c_b[i])
    c_b[i] := False
}
print("done")
c_b[1] := c_a[3] > 9;
for(let i : int := 0; i < 5; i := i+1){
    print(c_b[i])
    c_b[i] := False
}
write_file("output.txt", cube)
print("cube", cube)